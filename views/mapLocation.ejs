<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css">
</head>
<style>
    #map {
        height: 600px;
        width: 100%;
    }
    .leaflet-container {
        background: #f4f4f4;
    }
    .custom-icon {
        background-color: #ffffff;
        border-radius: 50%;
        border: 2px solid #000000;
        height: 24px;
        width: 24px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>
<body>
    <h1>Car Locations</h1>
    <div id="map"></div>
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        // Initialize the map
        const map = L.map('map').setView([0, 0], 13);

        // Add a tile layer (Map provider)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        <%= if (cars && cars.length > 0) { %>
            const bounds = [];
            <%= cars.forEach(car => { %>
                const statusColor = car.isAvailable ? 'green' : 'red';
        
                L.marker([car.location.coordinates[1], car.location.coordinates[0]], {
                    icon: L.divIcon({
                        className: 'custom-icon',
                        html: '<div style="background-color: ' + statusColor + '; width: 24px; height: 24px; border-radius: 50%;"></div>',
                        iconSize: [24, 24]
                    })
                })
                .addTo(map)
                .bindPopup(`<b><%= car.make %> <%= car.model %></b><br>Status: <%= car.isAvailable ? 'Available' : 'Booked' %>`);
        
                bounds.push([car.location.coordinates[1], car.location.coordinates[0]]);
            }); %>
        
            if (bounds.length > 0) {
                const mapBounds = L.latLngBounds(bounds);
                map.fitBounds(mapBounds);
            }
        <% } %>
    </script>
</body>
</html>